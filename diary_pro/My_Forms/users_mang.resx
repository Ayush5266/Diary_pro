<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAATGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGMVJREFUeJztnQl0VGWahotNENxYZIekCty1XdulZ6adM2ecsbsdW4EA
        zSbSgDsoO5JKISqiyBZANkFCCGq63dhDqijqVnKrQkcFkoCEkJClEkBxR0GBO/93SRBCltq/W/e+zznP
        ORwgUPf/3u+v/+4mEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACA8CFJ0tX2LO9/2F2e4Xa3Z7xdkpMcbs/rdre8zC550lTFr9XfE3+m/h36u+Jn6Ge5Pz8AwE8c
        WVm9HJJnlGjoVaKZPaKZvxaNrYSk5Dmm/luSZ6XdJY/MdO+0cG8nAECwVZbbOdzyMNGkq4WlITe7n4rJ
        4NDZScYzxOl0XsU9DgAYhvT09GaZbvm/RQOucUjy8Wg1fQOeEG4QE1FCen7+JdzjA4Auccpyb/Etv1A0
        /pcaaPq6VwZuz1Hx+RZgNwGAMOFw59xE3/aiuX7lbnC/leTTtCqwu+Q7uMcPgJgkc0f27aKJPrJL8hn2
        hg5hIhCf/wOH23sr93gCEBPQQTVaRosGOsXewOGcCMQqJjMnpz33+AKgSRRFaXL2iL58mL1hIzcRfLXd
        7R1N28o93gBohgyX1yyaQ2Jv0Chpd3t2OLKz47jHHQB2tru8fw3LBTsxp/wtnTrkHn8AWMjNzW0hGmBW
        TB/kC3UlILadjnfg+gFgKOyy3E2E/1/cDaghc1yu3C7cdQEg4tBFMnbJU6SBptOUYiVQ4sjKuo67PgBE
        DGdWzl0OyXOEu9k0q+Q55nR77+WuEwBhx+72PCD8gb3JNK5YHX1P9zpw1wuAsLFdku8Xzf8zd3PFjJJ8
        EpMA0AWZO+RbjHmaL+RJ4Du6HJq7fgAEjXrAzy1XsTdTrCp5jmzb4bmGu44ABExGdnZHHO0Ph3Kh05nb
        gbueAPiNTVGa2iU5g795dOMWGlPuugLgFyKwiRpoGr05hbuuADSKw5X9x5h6eEeMSGOa6fb8O3d9AagX
        eoy2Q/L4uJtFr9rdcjmeKQA0i/qgTg00ip6lpxFz1xmAi6DlqZHv7IvaBCDGmC6s4q43AOdwOp3NHW55
        N3dzGEW75Mmj26m56w6AisMlT+RuCqMpdgWe5647ACY6KEU3sHA3hOGU5O/cbndb7voDgyP2SV9mbwaD
        Ksbexl1/YGA2e71X4EYfRiXPsaysrMu5cwAMisMtT2VvAoMrVgGTuHMADMj63NzWeLqPBpTkw7IsX8qd
        B2AwHJJ3KHv4oWpmljyYOw/AYIhvnm3cwYdntbs9W7nzAAzEtqysrg49vbsv1qV3D8pyN+5cAIMgvnEm
        s4ce1tI7gTsXwCDQpaj8gYcXKu/mzgUwAFtdO3vwhx3WpdPp7c6dD6Bz7C7PcO6gw/qUh3HnA+gcsfxP
        4Q86rGcCeIc7H0DnOCRPKX/QYZ2K2nDnA+gYekY9e8hhgzpluTd3ToBOyczyDOAOOGxMOYE7J0Cn2CU5
        iT/gsBETuXMCdIpd8qRpIOCwQeVU7pwAnSIC9il/wGGDSp6d3DkBOkRRlCZ2t+cH9oDDRiYA+TvurAAd
        Qs/+Yw839Es8KxCEnQyX18wdbOifmW53T+68AJ2RuUO+hTvY0F9zbuLOC9AZDlf2H/iDDf3R6fbey50X
        oDMcWd7/4Q429E+72/MAd16AzrC75Ue5gw39nQDkR7nzAnTGdpf3L9zBhv5OAJ4/cecF6AyHK/uP3MGG
        /klvaubOC9AZmTuyb+cONvRX763ceQE6A7cCx46Z7p0W7rwAneF05nTmDjb0T0mSrubOC9AZubm5Lexu
        z6/c4YYNa5fkX5xOZ3PuvAAd4nDLhdwBh41NAJ593DkBOsUhedZzBxw2MgG45Y+5cwJ0ilhezuYOOGzU
        17lzAnSK3SWP1EDAYYNmj+DOCdApdJMJf8BhQ26XPPdw5wToFDq6bJc833OHHNYt1YbO1nDnBOgYhyRv
        5g46rGcCcMsbufMBdI7DJU/kDjqsbwLwjOfOB9A5293eO7mDDuuW7tfgzgfQOTZFaSq+aY5yhx3WUvIc
        odpw5wMYAIckL2IPPLxAsf+/gDsXwCDQqSbuwMMLdWbl3MWdC2Ag6Jpz7tDDGuW93HkABkMEL5E/+LB6
        ApjKnQdgMLa6dvagW0/5w29sqQZUC+48AAPikDyruRvA6IpdsZXcOQAGxZGVdZ1Dkk9zN4GBPZUp5VzL
        nQNgYEQI0zXQCIZUfPuncdcfGBx6Aq3YDz3D3QxGk8ac3tfIXX8A6JRgGndDGE0x5incdQdAhZ4YbHd7
        vuFuCsMoyd+5XLlduOsOwDnEBDCWvTEMot2d/Qx3vQG4gPT09GYinJ9xN4cB/JTGmrveAFwE3SOAdwdE
        TrroJzM7+/fcdQagXkRQp3A3in71TuCuLwANoihKE/FN9Ql/s+hLMaabaGy56wtAo2yV5XYOyVPK3TR6
        0e6Wy53O3A7cdQXAb+gd9SK8J7ibRweeyMzKuo+7ngAEjF3KfkQE+JQGmig2Ve+zkBO46whA0Niz5CfZ
        GylG3S55xnDXD4CQsUvyDO5mikGnc9cNgLDhkDzzNNBUMaHd7ZnLXS8Awo4I9mTcOdhA458dm+ncdQIg
        YmS65cdwtWCdnhKrpFHc9QEg4mx3ef/qkOTjGmg6jSj/aHfL/8ddFwCixrYdnhvskiePv/l4pcer48Ee
        wJDIsnyp+OZbzt2EbM3vltdkZOxqw10HAFgR+76P0zKYuyGj1/ieH8T2DuMedwA0g12Wu9E3IndzRsEN
        juzsOO7xBkCTbNiaOThjR9ZhDTRqWN22I/voRrtzOPf4AqAp6BbXRevW3bNo7bo581enFM9etlyZuXCR
        surddCVjh5u9cUNVTGbKynffV2YmL1TeENtG20jbuiQt7W7usQeAjeQ17926eO2615JXp5S/vnSZMmP+
        AsX25pwLfHnefGX52neVLdtd7I0cqFudkrLqvXR1Gy7aLrGtb4htnp+ypmxRWtrMxevW/Y67HgBEnAWb
        N7d8Ky0tITk11fvmireVV5KTL2qOupwxd76yIu1dZbNjB3tjNyZ9xhVi0qLP7M+2qZPBshXKgjWpu8XY
        jF62bH1r7joBEFYk28M3im+62YvWph1bnLZOSV6Tqrwqlvn+NMgFzpmrzBHNsvaDj9SlNXez17jNla28
        98lGJXnlKmW6+IyBbheNRXLKGoXGhsaIxorGjLtuAIRE2fjuNxeOvCw3b0DTM2uWzfqSAn6+c1e+o8yo
        Y4ns76rgrdWpSvr6TSyTwVanW3n/k03K4tVrlJfmzQtqG14S2z7n7ZVK7XFJWTb7GI3Z/hFtCksndr6L
        u44ABETFuLjbDzxx1c78gc2UvH6ms47u6Ksd9OpvPHV/OJhvzhqnC99cskzsJryn/HPjFmVbBCYE+jf/
        sWGz+n/Q/2UL5fOKn6XjHrTtdY1J3qiOvppxozEUY5lXPinuXu66AtAg5YnxtxY92fbzgr81/63xz9lE
        +WD++LK6Ak8uTKWJYGlIE8EFy+rkhcq85SuVpalrlTXpHyrpGzYpH23ZpqzPsCub7E4lQ3yD28XSnaRf
        0+/Rn9Hfob9LP0M/O2/52+q/FY7PRNs2660lykKxC1TfOHw4d1wpjVXt8SsY2FwpeqrtZ+U2Mw4YAm1R
        MaVr+6Knr8oQjX/m4sb/zb1DL/1x0ZrUM/WFv+b4wKwlS8I2EWhBtfHFNiU30PjkkrS1p/cObfVjQ2NY
        MKj5maKn224/PNXcibvuwOAoo+9sUTK24+x9Q1v+2lBozzdn/J2FDTXB+bsGs5evCPoYgRacMXeeWNUs
        V1c3/myzd/ydB/wdRxrzkjEd36AacOcAGJBKm+XPlVbL/n1DW/kV2HP2b3omfeG0cn8aQlVMBHNXrlJm
        LlocE6sC+oz0WekzL65nH78u0xdM9dHYBDKWNPaVSZYvKm29HuTOAzAIJba4qyqTzMtE8Ch8Sun4roFN
        ALSMHdzy56Upq076PQmctyqYs6J6n1xDkwEdhHxFfCa6tmFh6tqAtkld+qem/JI/pNVPgY5j6YSuSk0d
        fEmWdJ/tWrw7AESOSpu5nwja4ZrQ1bj/8TYBTwJ7nujs/yqgnslg3qrVYt96KctuAp3Ce23xEmWO+KYP
        pukvOOo/upMv0PGjMa9dB5/VUiVWZn24cwJ0RpXN0pG+YWoHrsaKKT2U/ISLj1w3pmfC3ftDaZzaBw/p
        ugI6pUgX1rwUxkmB9uVnLlysnrqjpX1jB/MC0Tvhbr/3+2uksS6f2qPOWlRPBBtKbT26cucG6ACxn/+n
        Sqv5y/rCVuPBZ9oFPAHkiSBnvDrwQLiaqa5VwoKUVLFSeEcsz1cqdKMRnWqkVQOdjntt0Vuq9Gv6Pfoz
        +jv0d+ln6Oq8+s7Vh8NtL/c/kBfExFksxrqxeviSzEd91vj/5c4PiFGUBFMzn9U8XXybnG4sbGe/dczK
        viEtA58E+jc9s+H10cWRajKtuvGNkQcDPehH7h1yCTV3o/WoPi5wpjLJvABnCkBAlL14TTcRIMmfkJ1v
        +aTuSjDfaHn9m535cM7YUu6mjJYfz3mmJJjmp7Etm9w9oJpU7xK4sEsA/IKWjbR8DDRkNRY/1yHwCaB6
        JbBx1uNF3M0ZaTe8/vcSus4/mDEqHtMhqJpUr9COCB/gzhfQMGLJOFZ4KtiQ1Vg4IvCzAjWTQOaMPhE7
        JsCtffojhUGtkIT7R1wWUk2qdwlOidUA3jcILoT29yut5uRQA1ZjRWK8snfwJUEFnY5w/+v5G3Q3CXjH
        3XYwmDMl5D7a7xdjGq760HUciu3+5ty5Axrgy4nXXS6W/JvDF67q4wFTeyoF598NGKAFI9tXLX9nxU/c
        jRuqy1OWHy8Y0e5w0OMwoJk6luGuj1gNbKTac+cPMOKzWXpWWi27wx2uGssmdlPy+wf3raeG/28tfvl4
        9tMl3E0crB/PHVMmVkIng91+9aDfxK4RqU21u8ptvbtz5xAwUGbr1Vs0f2kEw6Va+kJnJb+O21sDaYLP
        nutdHMylw1wuS1l14vPnehUHu79fs92HxnWOaG2qVwKHDtuusXDnEUQRny3uetH8vkiHq8ZDz3cK6krB
        2quBbS8P0PyxgYyXEw7QZw1lW2nCPPRCp6jURtVqLq+wma/lziWIApWJcTdEs/nPTQJjO4Y8CZB7H2vz
        7cdvam+34MM5z5blD7vsm1C3j5q/5PkoNv9vK4HDhxMteEehnqmwxd3mz2W9EZsEaHcgDJOAuiIYfvmx
        LTOHsF83sOXVQQcKhl/2dTi2Kb9/U6U0Csv++icB81F6qhN3TkEEqLJZbhbf/Me4wlVj6YRuSv6A4M8O
        XDQRDG75s3fCXYWrVi74NlpNT/+Xd/ydhfR/h207xJjQQVPu+lQmmb+qtPXGE4n1xNmj/eZy/nCdle4e
        pHPb4WoeVbGyEKuCr7Mn3VeYunTm0XA3feqSV45mT7q3UP22D9Mq5txujRiLhu7uY5gEyiqm9erBnVsQ
        BiqmXN9e7N/t5Q/VhdKFLXR1W1gngQtWBpeczBvZvipn/B2FdOPNqhXzv/G32Ve/Pf/rTbNGHMwZf9sB
        uh6hIJRTeY24/++XqTdScdfjovpYzQVltu7tuPMLQqBqfKc2PqvFwx2mhix+tn1wNxAFu0oY1OJkwdBW
        xwuGtf6ejiOo0q/p98SfReuz0LEQum+Ce/wb1GrO9tm64E1FsQhd6ilm8U3sIfLDcnWXIIhbiWPUfYMv
        Ue+c5B53P12Py4ZjEDF7z9dAePyW7nEveqpt9FYDHIpto230935+rSh2IWdz5xkEgC/RMog7NMFKq4Gg
        7ybUsPsfb61uG/f4BmtFomUgd66BH9CbYyqtluPcgQlVumZgb7jPFDC4b2hL1nP7YfQnn63XHdz5Bg1Q
        OqVnW7G8LNJAWMJmqToRxN7xAbodmuOKvkjqs1pK8OhxjaLYTE1FkbZyhyRS0orgi+Gt2Ru7MWmpr5Nv
        /HomAfMWyhp33kEtKq3xE7jDEQ1pP7po9JXqyzK5m71Gehlq0RNXqhc4cY9PVLSax3HnHZwHXbop9vt/
        Zg9GlKU34xwYdYVS99uII9z0YgKi/5vejMQ9DtHXfAJvKdYIhc/1bimKsos/FLyWT+6hXlhDb8yJxIRA
        /+b+EW2U4mc7xPTR/LBptXyeb7vxEu78Gx6xT/YGexg0qG9anNgX76JeaUi7DHRqkV6muXdQC/VRZXTn
        XX4/01nFr+n36M/2DWul/l36GfrZ0vFdxL8Vzufx6UirZSZ3/g1NpS3+j/6+uAPCcFv9lOF/4+4DQ0LL
        LzED7+MOATS2dNMQ3jzEgC/JPJW7+BCSVUmWidz9YCjoXm0x8/7AXXgIVenK02nxcdx9YRjEvtc/2YsO
        4XmKTL7P3ReGgN7vxl1sCOvU1utB7v7QNeoruzX4dB8ISV+SOZ8yyt0nukUM8mPcRYawQRPNQ7j7RJfQ
        qRa93ekHdajVfACnBSOAGNwn2IsLoR/6Es0juftFV5TY4lrRo5q5CwuhX1otpXSPCnff6AZfkmUse1Eh
        DECf1fwsd9/oAvXIv9VSwl1QCAOR3jqMMwJhoCrJnMBdTAiD0mbpw90/MY/Y989iLySEQShWri7u/olp
        6Cms3EWEMCSt5t9z91HMIvajUtkLCGEI+pLMKdx9FJMcnmruJGbPk9wFhDA0zSeqbJaO3P0Uc4iBe4G/
        eBCGrs9qGcPdTzGHmAByuQsHYTgUE0AOdz/FFD5b3PXcRYMwnFYkxl/H3Vcxg5gxX+EuGITh1Jdkfom7
        r2ICxWRq4kuyFHMXDMJwSlezUra5+0vz0GOWuYsFYSSssPa6j7u/NI8YqNe4CwVhJKRdW+7+0jyVeM0X
        1KtW86fc/aVpjr7Ys4vY/z/DXigIIyBlmzLO3WeapSLRPIK7SBBG2Me4+0yziH2kf2igQBBGTqv5Pe4+
        0ySK7f7mlVbLN+wFgjCyfo0HhdRBhS3uNg0UB8KIW24z/4673zRHJZ76Cw2iLyl+FHe/aQ6xb7SKuzAQ
        RkWr5W3uftMc9J519sJAGAVF1vO4+01TfDnxust9Vstp7sJAGA0p61/Zel/B3Xeaocpm+S/uokAYTats
        vf6Tu+80g9j/H8ddEAijq/kF7r7TDL4k8xL+gkAYPX1JlsXcfacZxGxo5y4IhFHVasnk7jvNQK9RYi8I
        hFGUMs/dd5qA3qIqBuMUd0EgjKZ0JqDshe6XcvcfO5W23jdyFwNCDqsSe93E3X/sVNnMD3EXAkIOK2zx
        D3P3HzuYAKBRpexz9x87ldb4+7kLASGHuBhIcGRa717chYCQw8O2ayzc/ccOPQikIsmMswDQUFLmKfvc
        /acJyqf29HEXBMJoKjJfwd13muHQ8x33chcEwmhaPLZjAXffaYYvHm+NCQAayv3DW2MCqCGvr+lYxYtx
        7EWBMBpS1inz3H2nCfYMMrXN62dSip5qy14YCKMhZZ0yn59gasfdf+wU9DXdQ4NRMKAZPSqJvTgQRlJf
        olkpGNhMnQAo+9z9x86ePqZHaDDIg0+3Yy8QhJG06Omz3/6qfU19uPuPHbEMerBmQPL7NxX7Rz3ZiwRh
        JKyY2lMs+5ucmwAo+9z9x86eBNN952ZE4RfDWtG90uzFgjDcfvHYpcr5Wafsc/cfO3sGmjqdPyjqAcEn
        cUAQ6suiJ69Saud816Omjtz9pwnEYHxTe3BKxlzNXjQIwyFluXa+KfPcfacZ9vQ1baljgJTiZ9uzFw/C
        UCwe06Gu5ic3cfedZhATwOR6BkldOuGYAIw1KbN1LfvPcxJ332mGvAGmXg0MlHrwpHxqD/aiQuiPFVN6
        qAezG8p0QR/TNdx9pyn29DPtbGjA6PTJwSfbKr5p8ewFhrAufYnx6gHsvPNO9dUlZZ273zSH2A0Y0tCg
        nZsIBjRVip64Uimb1J294BCSZZO7K0Wjr1QK+jdtNL/k7gTTIO5+0xy5o00t8vqaiv0ZwBr3DmqhHBh1
        hVIy9mqlbGI39SYLmoW5AwH1KWWLMkZZoyP7lD3KYCCZFV90RZR17n7TJHl9TH0DGUwIY809CaZHuftM
        04hB2sxdJAgjJE79NUZ+gqmzGKgjGigWhOGzr+kwXfXK3V8xgZgE7haDdpy9aBCGQbHf/7OYAP7A3Vcx
        Bd0qKfyFu3gQhqJo/pO47TdI9iSY/pKHlQCMVfuaftzTx/Rn7j6KacQAXi9m0b3sxYQwAPf0MxXuTjDd
        wt0/uiD3IVNrMaizxIx6iruwEDak+LI6LXK6bN/Dpsu5+0Z37HrUdLMY5HR1kDVQbAhrrM7k+wV9TXjl
        d6T5fIApfk+CKUkM+G6x1DrDXXxoTCl7wl2i+a0FfUxx3H1hSOipKmLJ9ZBwgjBZ+I4oTjqEYZeydTZj
        lLWH8EQfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMD8
        PzfhxzQ+m9aTAAAAAElFTkSuQmCC
</value>
  </data>
</root>